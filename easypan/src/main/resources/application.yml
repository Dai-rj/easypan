# 配置应用程序的服务器相关设置，包括端口、Servlet路径、会话超时、favicon禁用等。
server:
  port: ${APP_PORT:7090}  # Use environment variable for port number
  servlet:
    context-path: /api  # Servlet的上下文路径
    session:
      timeout: PT60M  # 会话超时时间
    favicon:
      enable: false  # 禁用favicon
  error:
    include-message: always  # 异常信息始终包含在响应中

# 配置Spring MVC和数据源等相关设置。
spring:
  mvc:
    throw-exception-if-no-handler-found: true  # 当没有找到处理程序时抛出异常
  datasource:
    url: ${DB_URL:jdbc:mysql://127.0.0.1:3306/easypan?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&autoReconnect=true&allowMultiQueries=true}  # 数据库URL
    username: ${DB_USERNAME:root}  # 数据库用户名
    password: ${DB_PASSWORD:root}  # 数据库密码
    driver-class-name: com.mysql.cj.jdbc.Driver  # 数据库驱动类名
    hikari:  # HikariCP配置
      pool-name: HikariCP  # 池名称
      minimum-idle: 5  # 最小空闲连接数
      idle-timeout: 180000  # 空闲连接超时时间
      maximum-pool-size: 10  # 最大池大小
      auto-commit: true  # 自动提交
      max-lifetime: 1800000  # 连接最大生命周期
      connection-timeout: 30000  # 连接超时时间
      connection-test-query: SELECT 1  # 连接测试查询
  mail:
    host: smtp.qq.com  # SMTP主机
    port: 465  # SMTP端口
    username: ${MAIL_USERNAME:test@qq.com}  # 邮件用户名
    password: ${MAIL_PASSWORD:123456}  # 邮件密码
    default-encoding: UTF-8  # 默认编码
    properties:
      mail:
        smtp:
          socketFactory:
            class: javax.net.ssl.SSLSocketFactory  # SMTP SSL类
          debug: true  # SMTP调试模式
  data:
    redis:
      database: 0  # Redis数据库索引
      host: 127.0.0.1  # Redis主机
      port: 6379  # Redis端口
      timeout: 2000  # Redis超时时间

# 配置项目相关目录路径。
project:
  folder: ${PROJECT_FOLDER:D:\Users\IdeaProjects\easypan}  # 项目文件夹路径

# 配置日志记录的级别。
logging:
  level:
    root: DEBUG  # 根日志记录器的级别

# 配置管理员相关信息。
admin:
  emails: ${ADMIN_EMAIL:test@qq.com}  # 管理员邮箱列表

# 标记开发环境。
dev: ${DEV_ENV:false}  # 是否为开发环境

# 配置QQ登录的相关信息。
qq:
  app:
    id: ${QQ_APP_ID:12333}  # QQ应用ID
    key: ${QQ_APP_KEY:2222222}  # QQ应用密钥
  url:
    authorization: https://graph.qq.com/oauth2.0/authorize?response_type=code&client_id=%s&redirect_uri=%s&state=%s  # 授权URL
    access-token: https://graph.qq.com/oauth2.0/token?grant_type=authorization_code&client_id=%s&client_secret=%s&code=%s&redirect_uri=%s  # 获取访问令牌的URL
    openid: https://graph.qq.com/oauth2.0/me?access_token=%s  # 获取OpenID的URL
    user-info: https://graph.qq.com/user/get_user_info?access_token=%s&oauth_consumer_key=%s&openid=%s  # 获取用户信息的URL
    redirect: http://easypan.wuhancoder.com/qqlogincallback  # 登录回调URL
